services:
  nginx:
    image: tcrean15/geodjango_nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - awm_django_app
    networks:
      - awm2024
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  redis:
    image: redis:6-alpine
    networks:
      - awm2024

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot 
             --email c21416014@mytudublin.ie --agree-tos --no-eff-email 
             -d awm1.uksouth.cloudapp.azure.com
    depends_on:
      - nginx

  postgis:
    image: tcrean15/geodjango_postgis:latest
    expose:
      - "5432"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -h localhost -p 5432 -U ${DB_USER}"
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - awm2024
    restart: always

  awm_django_app:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "8001"
    depends_on:
      postgis:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DJANGO_SETTINGS_MODULE=geodjango_tutorial.settings
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=False
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgis
      - DB_PORT=5432
      - REDIS_HOST=redis
    networks:
      - awm2024
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    restart: always


networks:
  awm2024:
    name: awm2024
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume: